syntax = "proto3";

package proto;

import "code.proto";

option java_generic_services = true;
option java_package = "net.coding.proto.platform.project";
option java_outer_classname = "ProjectProto";

message ContainArchivedProjectsGetRequest {
  int32 teamId = 1;
}

message Project {
  int32 id = 1;
  string name = 2;
  string displayName = 3;
  string description = 4;
  string icon = 5;
  int32 teamId = 6;
  string projectPath = 7;
  string htmlUrl = 8;
  string label = 9;
  bool invisible = 10;
  bool isArchived = 11;
  int32 pmType = 12;
  string pmTypeName = 13;
}

message GetProjectResponse {
  proto.common.Code code = 1;
  string message = 2;
  Project data = 3;
}

message GetProjectsResponse {
  proto.common.Code code = 1;
  string message = 2;
  repeated Project data = 3;
}

message ContainArchivedProjectsGetResponse {
  proto.common.Code code = 1;
  string message = 2;
  repeated Project project = 3;
}

enum ProjectTemplate {
  DEV_OPS = 0; // devOps
  DEMO_BEGIN = 1; // 范例项目
  CHOICE_DEMAND = 2; // 按需选择
}

message CreateProjectRequest {
  int32 userId = 1;
  string name = 2;
  string displayName = 3;
  string description = 4;
  ProjectTemplate projectTemplate = 5; //目前只支持DEV_OPS
}

message CreateProjectResponse {
  proto.common.Code code = 1;
  string message = 2;
  Project project = 3;
}

message DeleteProjectRequest {
  int32 userId = 1;
  int32 projectId = 2;
}

message DeleteProjectResponse {
  proto.common.Code code = 1;
  string message = 2;
}

message ExistProjectByNameRequest {
  int32 teamId = 1;
  string projectName = 2;
}

message ExistProjectByNameResponse {
  proto.common.Code code = 1;
  string message = 2;
  bool isExist = 3;
}

message GetWithArchivedProjectRequest {
  uint32 teamId = 1;
  uint32 projectId = 2;
}

message GetWithArchivedProjectResponse {
  proto.common.Code code = 1;
  string message = 2;
  Project project = 3;
}

message GetJoinedProjectsRequest {
  uint32 teamId = 1;
  uint32 userId = 2;
  string keyword = 3;
}

message GetJoinedProjectsResponse {
  proto.common.Code code = 1;
  string message = 2;
  repeated Project projects = 3;
}

message IsProjectRobotUserRequest {
  string userGK = 1;
}

message IsProjectRobotUserResponse {
  proto.common.Code code = 1;
  string message = 2;
  bool result = 3;
}

message GetProjectByIdRequest {
  uint32 projectId = 1;
  bool withDeleted = 2;
}

message GetProjectByTeamIdAndNameRequest {
  uint32 teamId = 1;
  string projectName = 2;
}

message GetProjectByTeamIdAndDisplayNameRequest {
  uint32 teamId = 1;
  string displayName = 2;
}

message GetProjectByIdsRequest {
  repeated int32 projectIds = 1;
  bool withDeleted = 2;
}

message GetProjectsByTeamIdRequest {
  uint32 teamId = 1;
  bool withDeleted = 2;
  string keyword = 3;
}

service ProjectService {
  rpc ContainArchivedProjectsGet(ContainArchivedProjectsGetRequest) returns (ContainArchivedProjectsGetResponse);
  //  创建项目
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse);
  //  删除项目
  rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse);
  //  查询项目名称是否存在
  rpc ExistProjectByName(ExistProjectByNameRequest) returns (ExistProjectByNameResponse);
  //  查询包含归档项目
  rpc GetWithArchivedProject(GetWithArchivedProjectRequest) returns (GetWithArchivedProjectResponse);
  //  查询我参与项目列表(包含如有全部项目权限,则全部，否则项目内)
  rpc GetJoinedProjects(GetJoinedProjectsRequest) returns (GetJoinedProjectsResponse);
  //  查询我参与项目列表(在项目内)
  rpc GetUserProjects(GetJoinedProjectsRequest) returns (GetProjectsResponse);
  //  查询用户GK是否是项目令牌机器人
  rpc isProjectRobotUser (IsProjectRobotUserRequest) returns (IsProjectRobotUserResponse);
  //  查询项目根据项目Id
  rpc GetProjectById (GetProjectByIdRequest) returns (GetProjectResponse);
  //  查询项目根据团队Id/项目名称
  rpc GetProjectByTeamIdAndName (GetProjectByTeamIdAndNameRequest) returns (GetProjectResponse);
  //  查询项目根据团队Id/项目名称
  rpc GetProjectByTeamIdAndDisplayName (GetProjectByTeamIdAndDisplayNameRequest) returns (GetProjectResponse);
  //  查询项目根据多个项目Id
  rpc GetProjectsByIds (GetProjectByIdsRequest) returns (GetProjectsResponse);
  //  查询项目根据团队Id
  rpc GetProjectsByTeamId (GetProjectsByTeamIdRequest) returns (GetProjectsResponse);
}