syntax = "proto3";

import "code.proto";
import "google/protobuf/timestamp.proto";

package app.grpc.enterprise.credential;

option java_generic_services = true;
option java_package = "net.coding.proto.platform.project";
option java_outer_classname = "ProjectCredentialProto";

// 凭据范围
enum CredentialScope {
  PROJECT = 0; // 项目内公开
  PRIVATE = 1; // 个人私有
}

// 凭据类型
enum CredentialType {
  PASSWORD = 0;
  USERNAME_PASSWORD_TYPE = 1; // conflict with JenkinsCredentialScheme, add a suffix
  TOKEN = 2;
  SECRET_KEY = 3;
  APP_ID_SECRET_KEY = 4;
  SSH = 5;
  SSH_TOKEN = 6;
  USERNAME_PASSWORD_TOKEN = 7;
  OAUTH = 8;
  KUBERNETES = 9;
  ANDROID_CERTIFICATE = 10;
  IOS_CERTIFICATE = 11;
  TLS_CERTIFICATE = 12;
  TENCENT_SERVERLESS = 13;
  CODING_PERSONAL_CREDENTIAL = 14;
}

enum JenkinsCredentialScheme {
  NONE = 0;
  USERNAME_PASSWORD_SCHEME = 1;
  DOCKER_HOST_CERTIFICATE_AUTHENTICATION = 2;
  SSH_USER_NAME_WITH_PRIVATE_KEY = 3;
  SECRET_FILE = 4;
  SECRET_TEXT = 5;
  CERTIFICATE = 6;
  CLOUD_API = 7;
}

enum ConnGenerateBy {
  AUTO = 0;
  MANUAL = 1;
  DOCKER_REGISTRY = 2;
  NPM_REGISTRY = 3;
  ARTIFACT_SCANNING = 4;
}

enum VerificationMethod {
  KUBECONFIG = 0;
  SERVICE_ACCOUNT = 1;
}

message Credential {
  int32 id = 1; // 凭据编号
  int32 teamId = 2;
  int32 projectId = 3;
  CredentialScope scope = 4;
  string name = 5;
  CredentialType type = 6;
  string credentialId = 7; // 凭据ID，UUID格式
  int32 scheme = 8;
  string username = 9;
  string password = 10;
  string private_key = 11;
  string token = 12;
  string appId = 13;
  string secretId = 14;
  string secretKey = 15;
  string description = 16;
  string kubeType = 17;
  string kubeConfig = 18;
  string kubeUrl = 19; // url
  ConnGenerateBy generated_by = 20;
  int32 creator_id = 21;
  VerificationMethod verification_method = 22;
  string cluster_name = 23;
  bool accept_untrusted_certificates = 24;
  int32 state = 25;
  bool all_select = 26;
  google.protobuf.Timestamp created_at = 27;
  google.protobuf.Timestamp updated_at = 28;
  google.protobuf.Timestamp deleted_at = 29;
  string userGk = 30;
  AndroidCredential androidCredential = 31;
}
message AndroidCredential{
  int32 id = 1;
  int32 connId = 2;
  string sha1 = 3;
  string content = 4;
  string fileName = 5;
  string filePassword = 6;
  string alias = 7;
  string aliasPassword = 8;
  google.protobuf.Timestamp createdAt = 9;
  google.protobuf.Timestamp updatedAt = 10;
  google.protobuf.Timestamp deletedAt = 11;
}

message CredentialForm {
  CredentialType type = 1;
  CredentialScope scope = 2;
  ConnGenerateBy generated_by = 3;
  int32 id = 4;
  int32 team_id = 5;
  int32 project_id = 6;
  int32 creator_id = 7;
  string credential_id = 8;
  string name = 9;
  string description = 10;
  bool all_select = 11;
  string username = 12;
  string password = 13;
  string token = 14;
  string secret_id = 15;
  string secret_key = 16;
  string app_id = 17;
  string private_key = 18;
  // kubernetes
  VerificationMethod verification_method = 19;
  string kub_config = 20;
  string cluster_name = 21;
  bool accept_untrusted_certificates = 22;
  string url = 23;
}

message DelCredentialRequest {
  int32 id = 1; // 要删除的凭据编号
}

message DelCredentialResponse {
  proto.common.Code code = 1;
  string message = 2;
}

message CredentialGetRequest {
  string userGk = 1; // 当前用户
  int32 projectId = 2;
  int32 id = 3; // 凭据编号，可不填
}

message CredentialResponse {
  proto.common.Code code = 1;
  string message = 2;
  repeated Credential data = 3;
}

message UpdateUsernamePasswordRequest {
  int32 id = 1;
  string username = 2;
  string password = 3;
}

message UpdateUsernamePasswordResponse {
  proto.common.Code code = 1;
  string message = 2;
}

message GetByIdRequest {
  int32 id = 1;
  bool decrypt = 2;
}
message GetCredentialResponse {
  proto.common.Code code = 1;
  string message = 2;
  Credential data = 3;
}

message GetByIdListRequest {
  int32 project_id = 2;
  repeated int32 ids = 4;
  bool decrypt = 5;
}

message CreateCredentialRequest {
  string user_gk = 1;
  bool encrypt = 2;
  CredentialForm form = 3;
}

message CreateCredentialResponse {
  proto.common.Code code = 1;
  string message = 2;
}

message GetByCredentialRequest {
  string credentialId = 1;
  bool decrypt = 2;
}

message GetByCredentialResponse {
  proto.common.Code code = 1;
  string message = 2;
  Credential credential = 3;
}

message ListByProjectAndUserRequest{
  int32 projectId = 1;
  int32 userId = 2;
  bool allSelect = 3;
}

message ListByProjectAndUserResponse {
  proto.common.Code code = 1;
  string message = 2;
  repeated Credential credential = 3;
}

message ListByProjectAndGenerateByRequest{
  int32 projectId = 1;
  ConnGenerateBy generated_by = 2;
}

message ListByProjectAndGenerateByResponse{
  proto.common.Code code = 1;
  string message = 2;
  repeated Credential credential = 3;
}

// 下面是关于Task与Credential相关定义
message GetTaskIdsByCredentialRequest{
  int32 projectId = 1;
  int32 id = 2; // 凭据编号
  bool decrypt = 3;
}

message GetTaskIdsByCredentialResponse{
  proto.common.Code code = 1;
  string message = 2;
  repeated int32 taskId = 3;
}

message GetCredentialsByTaskIdAndGenerateByRequest{
  int32 projectId = 1;
  int32 taskId = 2;
  bool decrypt = 3;
  string generateBy = 4;
  int32 taskType = 5;
}

message GetCredentialsByTaskIdRequest{
  int32 projectId = 1;
  int32 taskId = 2;
  bool decrypt = 3;
  int32 taskType = 5;
}

message GetCredentialsByTaskIdAndGenerateByResponse{
  proto.common.Code code = 1;
  string message = 2;
  repeated Credential credential = 3;
}

message GetCredentialsByTaskIdResponse{
  proto.common.Code code = 1;
  string message = 2;
  repeated Credential credential = 3;
}

message GetCredentialsByTaskIdAndTypeRequest{
  int32 projectId = 1;
  int32 taskId = 2;
  CredentialType type = 3;
  bool decrypt = 4;
  int32 taskType = 5;
}

message GetCredentialsByTaskIdAndTypeResponse{
  proto.common.Code code = 1;
  string message = 2;
  repeated Credential credential = 3;
}

message ToggleTaskPermissionRequest{
  int32 projectId = 1;
  int32 connId = 2;
  int32 taskType = 3;
  int32 taskId = 4;
  bool selected = 5;
}
message ToggleTaskPermissionResponse{
  proto.common.Code code = 1;
  string message = 2;
}

service ProjectCredentialService {
  rpc Delete (DelCredentialRequest) returns (DelCredentialResponse);
  rpc Get (CredentialGetRequest) returns (CredentialResponse);
  rpc UpdateUsernamePassword (UpdateUsernamePasswordRequest) returns (UpdateUsernamePasswordResponse);
  rpc GetById (GetByIdRequest) returns (GetCredentialResponse);
  rpc GetByIdList (GetByIdListRequest) returns (CredentialResponse);
  rpc CreateCredential (CreateCredentialRequest) returns (CreateCredentialResponse);
  rpc GetByCredential(GetByCredentialRequest) returns(GetByCredentialResponse);
  rpc ListByProjectAndUser(ListByProjectAndUserRequest) returns (ListByProjectAndUserResponse);
  rpc ListByProjectAndGenerateBy(ListByProjectAndGenerateByRequest)returns(ListByProjectAndGenerateByResponse);
}
service ProjectCredentialTaskService{
  rpc GetTaskIdsByCredential(GetTaskIdsByCredentialRequest) returns (GetTaskIdsByCredentialResponse);
  rpc GetCredentialsByTaskIdAndGenerateBy(GetCredentialsByTaskIdAndGenerateByRequest) returns (GetCredentialsByTaskIdAndGenerateByResponse);
  rpc GetCredentialsByTaskId(GetCredentialsByTaskIdRequest) returns (GetCredentialsByTaskIdResponse);
  rpc GetCredentialsByTaskIdAndType(GetCredentialsByTaskIdAndTypeRequest) returns (GetCredentialsByTaskIdAndTypeResponse);
  rpc ToggleTaskPermission(ToggleTaskPermissionRequest) returns (ToggleTaskPermissionResponse);
}