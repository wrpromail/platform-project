<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.coding.lib.project.dao.credentail.TencentServerlessCredentialsDao">
  <resultMap id="BaseResultMap" type="net.coding.lib.project.entity.TencentServerlessCredential">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="conn_id" jdbcType="INTEGER" property="connId" />
    <result column="secret_id" jdbcType="VARCHAR" property="secretId" />
    <result column="secret_key" jdbcType="VARCHAR" property="secretKey" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="expired" jdbcType="INTEGER" property="expired" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="wasted" jdbcType="BOOLEAN" property="wasted" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, conn_id, secret_id, secret_key, token, app_id, signature, expired, uuid, wasted,
    created_at, updated_at, deleted_at
  </sql>

  <select id="getByConnId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tencent_serverless_credentials
    where conn_id = #{credId,jdbcType=INTEGER}
  </select>

  <update id="deleteByCredId">
    update tencent_serverless_credentials
    set deleted_at = NOW()
    where conn_id = #{credId}
  </update>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="net.coding.lib.project.entity.TencentServerlessCredential" useGeneratedKeys="true">
    insert into tencent_serverless_credentials (conn_id, secret_id, secret_key,
                                                token, app_id, signature,
                                                expired, uuid, created_at,
                                                updated_at
    )
    values (#{connId,jdbcType=INTEGER}, #{secretId,jdbcType=VARCHAR}, #{secretKey,jdbcType=VARCHAR},
            #{token,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR},
            #{expired,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR},
            NOW(),NOW()
           )
  </insert>

  <update id="update" parameterType="net.coding.lib.project.entity.TencentServerlessCredential">
    update tencent_serverless_credentials
    set
        secret_id = #{secretId},
        secret_key = #{secretKey},
        token = #{token},
        app_id = #{appId},
        signature = #{signature},
        expired = #{expired},
        uuid = #{uuid},
        wasted = #{wasted},
        updated_at = NOW()
    where id = #{id}
  </update>

  <update id="updateCredential" parameterType="net.coding.lib.project.entity.TencentServerlessCredential">
    update tencent_serverless_credentials
    set
        secret_id = #{secretId},
        secret_key = #{secretKey},
        token = #{token},
        signature = #{signature},
        expired = #{expired},
        updated_at = NOW()
    where id = #{id}
  </update>
  <update id="updateWasted">
    update tencent_serverless_credentials
    set
      wasted = #{wasted},
      updated_at = NOW()
    where id = #{id}

  </update>


</mapper>