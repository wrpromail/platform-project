<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.coding.lib.project.dao.ProjectTokenDao">
    <resultMap id="BaseResultMap" type="net.coding.lib.project.entity.ProjectToken">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
        <result column="creator_id" jdbcType="INTEGER" property="creatorId"/>
        <result column="associated_id" jdbcType="INTEGER" property="associatedId"/>
        <result column="token_name" jdbcType="VARCHAR" property="tokenName"/>
        <result column="global_key_id" jdbcType="INTEGER" property="globalKeyId"/>
        <result column="token" jdbcType="VARCHAR" property="token"/>
        <result column="scope" jdbcType="VARCHAR" property="scope"/>
        <result column="expired_at" jdbcType="TIMESTAMP" property="expiredAt"/>
        <result column="enabled" jdbcType="BOOLEAN" property="enabled"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="apply_to_all_depots" jdbcType="BOOLEAN" property="applyToAllDepots"/>
        <result column="apply_to_all_artifacts" jdbcType="TINYINT" property="applyToAllArtifacts"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="last_activity_at" jdbcType="TIMESTAMP" property="lastActivityAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, project_id, creator_id, token_name, global_key_id, token, `scope`, expired_at,
    enabled, `type`, apply_to_all_depots, apply_to_all_artifacts, created_at, last_activity_at,
    updated_at, deleted_at,associated_id
    </sql>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="net.coding.lib.project.entity.ProjectToken" useGeneratedKeys="true">
        insert into deploy_tokens
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectId != null">
                project_id,
            </if>
            <if test="creatorId != null">
                creator_id,
            </if>
            <if test="associatedId != null and associatedId != 0 ">
                associated_id,
            </if>
            <if test="tokenName != null">
                token_name,
            </if>
            <if test="globalKeyId != null">
                global_key_id,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="scope != null">
                `scope`,
            </if>
            <if test="expiredAt != null">
                expired_at,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="applyToAllDepots != null">
                apply_to_all_depots,
            </if>
            <if test="applyToAllArtifacts != null">
                apply_to_all_artifacts,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="lastActivityAt != null">
                last_activity_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="deletedAt != null">
                deleted_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectId != null">
                #{projectId,jdbcType=INTEGER},
            </if>
            <if test="creatorId != null">
                #{creatorId,jdbcType=INTEGER},
            </if>
            <if test="associatedId != null and associatedId != 0 ">
                #{associatedId,jdbcType=INTEGER},
            </if>
            <if test="tokenName != null">
                #{tokenName,jdbcType=VARCHAR},
            </if>
            <if test="globalKeyId != null">
                #{globalKeyId,jdbcType=INTEGER},
            </if>
            <if test="token != null">
                #{token,jdbcType=VARCHAR},
            </if>
            <if test="scope != null">
                #{scope,jdbcType=VARCHAR},
            </if>
            <if test="expiredAt != null">
                #{expiredAt,jdbcType=TIMESTAMP},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BOOLEAN},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="applyToAllDepots != null">
                #{applyToAllDepots,jdbcType=BOOLEAN},
            </if>
            <if test="applyToAllArtifacts != null">
                #{applyToAllArtifacts,jdbcType=TINYINT},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="lastActivityAt != null">
                #{lastActivityAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedAt != null">
                #{deletedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="deleteProjectToken">
        update deploy_tokens
        set deleted_at=NOW()
        where id = #{id}
        LIMIT 1
    </update>

    <update id="updateEnableProjectToken">
        update deploy_tokens
        set enabled    = #{enabled,jdbcType=BOOLEAN},
            updated_at = NOW()
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="update">
        update deploy_tokens
        set `scope`                = #{scope,jdbcType=VARCHAR},
            expired_at             = #{expiredAt,jdbcType=TIMESTAMP},
            apply_to_all_depots    = #{applyToAllDepots,jdbcType=BOOLEAN},
            apply_to_all_artifacts = #{applyToAllArtifacts,jdbcType=TINYINT},
            updated_at             = NOW()
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="selectByProjectToken" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deploy_tokens
        where
        `project_id` = #{projectId}
        AND `type` = #{type}
        AND deleted_at = '1970-01-01 00:00:00'
        ORDER BY created_at DESC
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deploy_tokens
        where id = #{id,jdbcType=INTEGER}
        AND deleted_at = '1970-01-01 00:00:00'
    </select>

    <select id="selectProjectToken" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deploy_tokens
        where
        `project_id` = #{projectId}
        AND `type` = #{type}
        AND token_name= #{tokenName}
        AND deleted_at = #{deletedAt}
    </select>
    <select id="selectByToken" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deploy_tokens
        where
        token= #{token}
        AND deleted_at = #{deletedAt}
    </select>

    <select id="selectByTokenAndProjectId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deploy_tokens
        where
        token= #{token}
        AND deleted_at = #{deletedAt}
        AND project_id = #{projectId}
    </select>

    <select id="selectByTokenAndGkId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deploy_tokens
        where
        token= #{token}
        AND deleted_at = #{deletedAt}
        AND global_key_id = #{gkId}
    </select>
    <update id="updateExpired">
        update deploy_tokens
        set expired_at = #{expiredAt},
            updated_at = NOW()
        where `id` = #{id}
          and deleted_at = #{deletedAt}
    </update>

    <update id="updateScopeById">
        update deploy_tokens
        set scope      = #{scope},
            updated_at = NOW()
        where `id` = #{id}
          and deleted_at = #{deletedAt}
    </update>
</mapper>