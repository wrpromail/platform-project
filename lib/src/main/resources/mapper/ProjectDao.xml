<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.coding.lib.project.dao.ProjectDao">
    <resultMap id="BaseResultMap" type="net.coding.lib.project.entity.Project">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="owner_id" jdbcType="INTEGER" property="ownerId"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt"/>
        <result column="status" jdbcType="SMALLINT" property="status"/>
        <result column="recommended" jdbcType="SMALLINT" property="recommended"/>
        <result column="depot_shared" jdbcType="TINYINT" property="depotShared"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="max_member" jdbcType="SMALLINT" property="maxMember"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="name_pinyin" jdbcType="VARCHAR" property="namePinyin"/>
        <result column="display_name" jdbcType="VARCHAR" property="displayName"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="plan" jdbcType="TINYINT" property="plan"/>
        <result column="team_owner_id" jdbcType="INTEGER" property="teamOwnerId"/>
        <result column="user_owner_id" jdbcType="INTEGER" property="userOwnerId"/>
        <result column="start_date" jdbcType="DATE" property="startDate"/>
        <result column="end_date" jdbcType="DATE" property="endDate"/>
        <result column="project_file_quota" jdbcType="INTEGER" property="projectFileQuota"/>
        <result column="invisible" jdbcType="BOOLEAN" property="invisible"/>
        <result column="label" jdbcType="VARCHAR" property="label"/>
        <result column="pm_type" jdbcType="TINYINT" property="pmType"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, owner_id, created_at, updated_at, deleted_at, `status`, recommended, depot_shared,
    `type`, max_member, `name`, name_pinyin, display_name, description, icon, `plan`,
    team_owner_id, user_owner_id, start_date, end_date, project_file_quota, invisible,
    `label`,pm_type
    </sql>

    <select id="getProjectPages" resultMap="BaseResultMap">
        select p.* from team_projects tp
        inner join projects p on p.id = tp.project_id
        <if test="queryType == 'JOINED' or queryType == 'MANAGED'">
            inner join project_members pm on pm.project_id = tp.project_id
            left join project_group_projects pgp on pgp.project_id = tp.project_id
            and pgp.owner_id = pm.user_id and pgp.deleted_at = '1970-01-01 00:00:00'
        </if>
        <if test="sortKey != null and sortKey == 'VISIT'">
            left join project_recent_views prv on tp.team_id = prv.team_id
            and pm.project_id =prv.project_id and pm.user_id = prv.user_id
            and prv.deleted_at ='1970-01-01 00:00:00'
        </if>
        where tp.team_id = #{teamId} and tp.deleted_at = #{deletedAt}
        and p.invisible = 0 and p.pm_type = 0
        and p.deleted_at = #{deletedAt}
        <if test="queryType == 'JOINED' or queryType == 'MANAGED'">
            and pm.deleted_at = #{deletedAt} and pm.user_id = #{userId}
            <if test="queryType == 'MANAGED'">
                and pm.type &gt;= 90
            </if>
            <if test="queryType == 'JOINED'">
                and pm.id &gt; 0
            </if>
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            p.name like CONCAT('%',#{keyword},'%')
            or p.name_pinyin like CONCAT('%',#{keyword},'%')
            or p.display_name like CONCAT('%',#{keyword},'%')
            )
        </if>
        <if test="(queryType == 'JOINED' or queryType == 'MANAGED') and groupId != null">
            <choose>
                <when test="groupId == 0">
                    and pgp.project_group_id is null
                </when>
                <otherwise>
                    and pgp.project_group_id = #{groupId}
                </otherwise>
            </choose>
        </if>
        group by p.id
        order by
        <if test="sortKey != null and sortKey == 'CREATE'">
            p.created_at
        </if>
        <if test="sortKey != null and sortKey == 'ARCHIVED'">
            p.updated_at
        </if>
        <if test="sortKey != null and sortKey == 'VISIT'">
            prv.updated_at
        </if>
        <if test="sortKey != null and sortKey == 'NAME'">
            convert(p.display_name using gbk)
        </if>
        <if test="sortValue != null and sortValue == 'DESC'">
            desc ,
        </if>
        <if test="sortValue != null and sortValue == 'ASC'">
            asc ,
        </if>
        p.id desc
    </select>

    <select id="getProjectByNameAndTeamId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM projects
        where
        `name` = #{name,jdbcType=VARCHAR}
        AND team_owner_id=#{teamOwnerId ,jdbcType=INTEGER}
        AND deleted_at = '1970-01-01 00:00:00'
    </select>

    <select id="getProjectByDisplayNameAndTeamId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM projects
        where
        `display_name` = #{displayName,jdbcType=VARCHAR}
        AND team_owner_id=#{teamOwnerId ,jdbcType=INTEGER}
        AND deleted_at = '1970-01-01 00:00:00'
    </select>

    <select id="getProjectByIdAndTeamId" parameterType="java.lang.Integer"
            resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM projects
        where
        `id` = #{id}
        AND team_owner_id=#{teamOwnerId}
        AND deleted_at = '1970-01-01 00:00:00'
        LIMIT 1
    </select>

    <select id="getProjectArchiveByIdAndTeamId" parameterType="java.lang.Integer"
            resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM projects
        where id = #{id}
        and team_owner_id = #{teamOwnerId}
        and deleted_at = '1990-01-01 00:00:00'
    </select>

    <select id="getProjectNotDeleteByIdAndTeamId" parameterType="java.lang.Integer"
            resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM projects
        where id = #{id}
        and team_owner_id = #{teamOwnerId}
        and (deleted_at = '1970-01-01 00:00:00' or deleted_at = '1990-01-01 00:00:00')
    </select>

    <select id="getProjectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM projects
        where
        id = #{id}
        AND deleted_at = '1970-01-01 00:00:00'
        LIMIT 1
    </select>


    <update id="updateBasicInfo">
        update projects
        set `name`       = #{name,jdbcType=VARCHAR},
            name_pinyin  = #{namePinyin,jdbcType=VARCHAR},
            description  = #{description,jdbcType=VARCHAR},
            display_name = #{displayName,jdbcType=VARCHAR},
            start_date   = #{startDate,jdbcType=DATE},
            end_date     = #{endDate,jdbcType=DATE},
            updated_at   = NOW()
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateIcon">
        update projects
        set icon       = #{icon,jdbcType=VARCHAR},
            updated_at = NOW()
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getUserProjects" resultMap="BaseResultMap">
        SELECT p.*
        FROM projects p LEFT JOIN project_members pm
        ON pm.project_id = p.id
        <where>
            p.deleted_at = '1970-01-01 00:00:00'
            AND p.team_owner_id = #{teamId}
            AND p.pm_type = 0
            <if test="userId != null">
                AND pm.deleted_at = '1970-01-01 00:00:00'
                AND pm.user_id = #{userId}
            </if>
            <if test="projectName != null and projectName != ''">
                AND p.`name` = #{projectName}
            </if>
            <if test="label != null and label != ''">
                AND p.label = #{label}
            </if>
            <if test="invisible != null">
                AND p.invisible = #{invisible}
            </if>
        </where>
        group by p.id
        order by p.id desc
    </select>

    <select id="getProjects" resultMap="BaseResultMap">
        SELECT p.*
        FROM projects p
        <where>
            p.deleted_at = '1970-01-01 00:00:00'
            AND p.team_owner_id = #{teamId}
            AND p.invisible = 0
            AND p.pm_type = 0
            <if test="projectName != null and projectName != ''">
                AND p.`name` = #{projectName}
            </if>

        </where>
        order by p.id desc
    </select>

    <select id="getProjectsByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from projects
        where
        id in
        <foreach item="item" index="index" collection="list" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and (deleted_at=#{deletedAt} or deleted_at=#{archivedAt})
    </select>

    <select id="getByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from projects
        where
        id in
        <foreach item="item" index="index" collection="list" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and deleted_at=#{deletedAt}
    </select>

</mapper>