<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.coding.lib.project.dao.ProjectMemberDao">
  <resultMap id="BaseResultMap" type="net.coding.lib.project.entity.ProjectMember">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="last_visit_at" jdbcType="TIMESTAMP" property="lastVisitAt" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
  </resultMap>
  <sql id="Base_Column_List">
    id, project_id, user_id, `type`, created_at, deleted_at, last_visit_at, `alias`
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project_members
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="net.coding.lib.project.entity.ProjectMember" useGeneratedKeys="true">
    insert into project_members
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="lastVisitAt != null">
        last_visit_at,
      </if>
      <if test="alias != null">
        `alias`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastVisitAt != null">
        #{lastVisitAt,jdbcType=TIMESTAMP},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="net.coding.lib.project.entity.ProjectMember">
    update project_members
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastVisitAt != null">
        last_visit_at = #{lastVisitAt,jdbcType=TIMESTAMP},
      </if>
      <if test="alias != null">
        `alias` = #{alias,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findList" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM project_members
    <where>
      <if test="projectId != null">
        AND project_id = #{projectId}
      </if>
    </where>
    ORDER BY id DESC
  </select>

  <select id="findListByProjectId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM project_members
    <where>
      <if test="projectId != null">
        AND project_id = #{projectId}
      </if>
    </where>
    ORDER BY id DESC
  </select>

  <select id="getByProjectIdAndUserId" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM project_members
    <where>
      <if test="projectId != null">
        AND project_id = #{projectId}
      </if>
      <if test="userId != null">
        AND user_id = #{userId}
      </if>
    </where>
    Limit 1
  </select>
</mapper>