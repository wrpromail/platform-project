package net.coding.lib.project.hook.trigger;import java.util.List;import lombok.extern.slf4j.Slf4j;import net.coding.lib.project.entity.Project;import net.coding.lib.project.entity.ProjectMember;import net.coding.lib.project.grpc.client.UserGrpcClient;import net.coding.lib.project.hook.EventBody;import net.coding.service.hook.definition.event.ServiceHookEvent;import net.coding.service.hook.definition.message.ServiceHookMessage;import org.springframework.stereotype.Component;@Component@Slf4jpublic class CreateMemberEventTriggerTrigger extends AbstractMemberEventTrigger implements        MemberEventTrigger<ProjectMember> {    private final ServiceHookMessage projectServiceHookMessage;    public CreateMemberEventTriggerTrigger(final UserGrpcClient userGrpcClient,            final ServiceHookMessage projectServiceHookMessage) {        super(userGrpcClient);        this.projectServiceHookMessage = projectServiceHookMessage;    }    @Override    public void trigger(List<String> roleId, ProjectMember projectMember, Project project,            int currentUserId) {        EventBody body = body(projectMember);        if (body == null) {            return;        }        projectServiceHookMessage.sendMessage(                project.getId(), currentUserId,                ServiceHookEvent.MEMBER_CREATED,                body,                getCondition(roleId)        );    }}